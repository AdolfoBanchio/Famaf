/*
Considere el problema de lectores y escritores que desean acceder a un recurso com´un
(por ej. una variable) donde los lectores s´olo pueden leer de ese recurso mientras los escritores pueden
leer y escribir. Adem´as de las consideraciones usuales del problema de lectores-escritores, por una
restricci´on de la administraci´on del recurso, s´olo se permite que K procesos lo est´en accediendo
simult´aneamente. Suoponga que en el sistema hay N lectores y M escritores (con N y M mayores
a K). Modele el problema descripto en FSP, proveyendo adem´as de las definiciones de los procesos
correspondientes, el diagrama de estructura de su modelo.
*/
const N = 5    // Número de lectores
const M = 3    // Número de escritores
const K = 2    // Máximo de accesos simultáneos

READER = ( acquire -> READ),
READ = (read -> READ
	| release -> READER).

WRITER = ( acquire -> WRITE),
WRITE= (write -> WRITE
	| release -> WRITER).


CONTROLLER(N=0) = CONTROL[N],
CONTROL[n:0..K] = ( when(n>0) reader.acquire -> CONTROL[n-1]
				  | reader.release -> CONTROL[n+1]
				  | when (n==K) writer.acquire -> WCONTROL),
WCONTROL = ( writer.release -> CONTROL[K]).

|| SYSTEM = (CONTROLLER(K) 
		    || r[1..N]:READER
			|| w[1..M]:WRITER)/{r.[1..N].acquire /reader.acquire,
								r.[1..N].release /reader.release,
								w.[1..M].acquire /writer.acquire,								
								w.[1..M].release /writer.release}.
			










